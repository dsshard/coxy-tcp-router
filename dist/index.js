'use strict';var d=require('crypto'),net=require('net'),B=require('events');function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var d__default=/*#__PURE__*/_interopDefault(d);var B__default=/*#__PURE__*/_interopDefault(B);var v="aes-256-gcm",l=12,b=16;function w(i){return d__default.default.createHash("sha256").update(i).digest()}function k(i,e){let t=w(e),r=d__default.default.randomBytes(l),n=d__default.default.createCipheriv(v,t,r),c=Buffer.concat([n.update(i,"utf8"),n.final()]),o=n.getAuthTag();return Buffer.concat([r,c,o]).toString("base64")}function T(i,e){let t=Buffer.from(i,"base64"),r=w(e),n=t.subarray(0,l),c=t.subarray(t.length-b),o=t.subarray(l,t.length-b),s=d__default.default.createDecipheriv(v,r,n);return s.setAuthTag(c),Buffer.concat([s.update(o),s.final()]).toString("utf8")}var p=class extends B__default.default{encrypt(e,t){return this.getSecret(t)?k(e,this.getSecret(t)):e}decrypt(e,t){return this.getSecret(t)?JSON.parse(T(e,this.getSecret(t))):JSON.parse(e)}};function u(){let i,e,t=new Promise((r,n)=>{i=r,e=n;});return Object.assign(t,{resolve:i,reject:e})}function S(...i){let e=[...i];return {push:(...n)=>e.push(...n),execute:async n=>{let c=-1,o=async s=>{if(s===c)throw new Error("next() called multiple times");c=s;let a=e[s];a&&await a(n,()=>o(s+1));};if(await o(0),n.body===void 0)throw new Error("Pipeline did not set ctx.body");return {body:n.body}}}}var m=class extends p{server;opts;routers=new Map;active=new Set;constructor(e){super(),this.opts=e,this.server=net.createServer(t=>this.handleSocket(t));}listen(e){let t=u();return this.server.listen(this.opts.port,this.opts.host,()=>{this.emit("listening"),t.resolve(),e&&e();}),t}getSecret(e){return `${this.opts.secret}${e?.secret??""}`}handleSocket(e){let t=(e.remoteAddress??"").replace(/^::ffff:/,"");if(this.opts.whitelist&&!this.opts.whitelist.includes(t))return this.emit("error:whitelist",e),e.destroy();if(this.opts.maxConnections&&this.active.size>=this.opts.maxConnections)return this.emit("error:maxConnections",e),e.destroy();this.active.add(e),e.setKeepAlive(true),e._buf=Buffer.alloc(0),e.on("close",()=>{this.active.delete(e),this.emit("close",e),e.removeAllListeners();}),this.handshake(e);}close(){let e=u();this.server.once("close",()=>{setTimeout(e.resolve);}),this.server.close();for(let t of this.active)t.destroy();return e}deriveKey(e){return d__default.default.createHmac("sha256",this.opts.secret||"").update(e).digest("hex")}handshake(e){let t=d__default.default.createECDH("prime256v1");t.generateKeys();let r=n=>{e.off("data",r);let c=n.toString().trimEnd(),o;try{o=JSON.parse(c);}catch{return e.destroy()}let s=t.computeSecret(Buffer.from(o.pub,"hex"));e.secret=this.deriveKey(s),e.clientName=o.name,e.write(`${JSON.stringify({pub:t.getPublicKey("hex")})}
`),this.emit("connect",e,o.name),e.on("data",a=>this.readFrames(e,a));};e.on("data",r);}readFrames(e,t){for(e._buf=Buffer.concat([e._buf,t]);e._buf.length>=4;){let r=e._buf.readUInt32BE(0);if(e._buf.length<4+r)break;let n=e._buf.subarray(4,4+r).toString("utf8");e._buf=e._buf.subarray(4+r),this.handleData(n,e);}}async handleData(e,t){let r;try{r=this.decrypt(e,t);}catch{return}let n=r.rout?.toLowerCase(),c=this.routers.get(n),o={uuid:r.uuid};try{if(!c)throw new Error(`Route ${n} not found`);let{body:f}=await c.execute({request:r.body,rout:n});o.body=f;}catch(f){o.error=f.message;}let s=this.encrypt(JSON.stringify(o),t),a=Buffer.from(s,"utf8"),h=Buffer.allocUnsafe(4+a.length);h.writeUInt32BE(a.length,0),a.copy(h,4),t.write(h);}use(e,...t){let r=S();r.push(...t),this.routers.set(e.trim().toLowerCase(),r);}};var g=class extends p{getSecret(){return `${this.opt.secret}${this.secret}`}sock;opt;ecdh=d__default.default.createECDH("prime256v1");secret="";buf=Buffer.alloc(0);pending={};mClosed=false;rTimer=null;connected=u();closed=true;constructor(e){super(),this.opt=e;}spawn(){this.sock=new net.Socket,this.buf=Buffer.alloc(0),this.sock.on("error",e=>this.emit("error",e)),this.sock.on("close",()=>this.onClose()),this.sock.once("connect",()=>this.sendHandshake()),this.sock.on("data",e=>this.onData(e));}sendHandshake(){this.ecdh.generateKeys();let e={pub:this.ecdh.getPublicKey("hex"),name:this.opt.name};this.sock.write(JSON.stringify(e));}onData(e){if(!this.secret)return this.onHandshake(e);for(this.buf=Buffer.concat([this.buf,e]);this.buf.length>=4;){let t=this.buf.readUInt32BE(0);if(this.buf.length<4+t)break;let r=this.buf.subarray(4,4+t).toString("utf8");if(this.buf=this.buf.subarray(4+t),this.closed)return;this.onMessage(r);}}onHandshake(e){let t=e.toString().trimEnd(),r;try{r=JSON.parse(t);}catch{this.sock.destroy();return}let n=this.ecdh.computeSecret(Buffer.from(r.pub,"hex"));this.secret=d__default.default.createHmac("sha256",this.opt.secret||"").update(n).digest("hex"),this.connected.resolve(true),this.emit("connect");}onMessage(e){let t;try{t=this.decrypt(e);}catch{return}let r=this.pending[t.uuid];r&&(t.error?r.defer.reject(new Error(t.error)):r.defer.resolve(t.body),delete this.pending[t.uuid]);}connect(){return this.closed?(this.closed=false,this.mClosed=false,this.connected=u(),this.spawn(),this.sock.connect(this.opt.port,this.opt.host),this.connected):this.connected}onClose(){this.closed=true,this.secret="",this.emit("close"),!(this.mClosed||!this.opt.autoReconnect)&&(this.rTimer||(this.rTimer=setTimeout(()=>{this.rTimer=null,this.spawn();},this.opt.timeoutReconnect)));}close(){this.mClosed=true,this.rTimer&&(clearTimeout(this.rTimer),this.rTimer=null),this.sock&&this.sock.destroy(),this.closed=true;}async send(e="",t={}){if(this.closed&&!this.mClosed&&await this.connect(),Object.keys(this.pending).length>=(this.opt.maxPending??500))throw new Error("Too many pending requests");let r=d__default.default.randomUUID(),n={uuid:r,rout:e,body:t},c=this.encrypt(JSON.stringify(n)),o=u();this.pending[r]={ts:Date.now(),defer:o};let s=Buffer.from(c,"utf8"),a=Buffer.allocUnsafe(4+s.length);return a.writeUInt32BE(s.length,0),s.copy(a,4),this.sock.write(a),o}};exports.TcpClient=g;exports.TcpServer=m;